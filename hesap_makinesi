import java.awt.*;
import java.applet.Applet;
import java.awt.event.*;
//GridBagLayout üzerine örnek bir program

public class hesap_mak extends Applet implements ActionListener {

GridBagLayout a=new GridBagLayout();
GridBagConstraints b=new GridBagConstraints();

TextField t;
Button b0;
Button b1;
Button b2;
Button b3;
Button b4;
Button b5;
Button b6;
Button b7;
Button b8;
Button b9;
Button b_nokta;
Button b_esittir;
Button b_arti;
Button b_eksi;
Button b_carpma;
Button b_bolme;
Button b_silme;

String sayi_1="",sayi_2="";
Double sayi1=0.0d,sayi2=0.0d,sonuc=0.0d;
String okuma="",yazma="",tampon="",tampon2="",deneme="",sonuc_str="";
int sayac=0,i=0;
Boolean ilk_operator_kullanıldı=false;
Boolean ikinci_operator_kullanıldı=false;
Boolean ilk_operator_eksi_ise=false,flag1=false,flag2=false,nokta_kullanıldı=false,nokta_kullanıldı2=false;
int operator=0,k=0;

public void init() {

this.setLayout(a);
b.fill=GridBagConstraints.BOTH;
b.insets=new Insets(3,3,3,3);

b.gridx=0;  // en üstteki sayı gösteren textfield
b.gridy=0;
b.gridwidth=4;
b.gridheight=1;
t=new TextField(10);
a.setConstraints(t,b);
t.addActionListener(this);
add(t);

b.gridx=0;
b.gridy=5;
b.gridwidth=2;
b.gridheight=1;
b0=new Button("0");
a.setConstraints(b0,b);
b0.addActionListener(this);
add(b0);

b.gridx=0;
b.gridy=4;
b.gridwidth=1;
b.gridheight=1;
b1=new Button("1");
a.setConstraints(b1,b);
b1.addActionListener(this);
add(b1);

b.gridx=1;
b.gridy=4;
b.gridwidth=1;
b.gridheight=1;
b2=new Button("2");
a.setConstraints(b2,b);
b2.addActionListener(this);
add(b2);

b.gridx=2;
b.gridy=4;
b.gridwidth=1;
b.gridheight=1;
b3=new Button("3");
a.setConstraints(b3,b);
b3.addActionListener(this);
add(b3);

b.gridx=0;
b.gridy=3;
b.gridwidth=1;
b.gridheight=1;
b4=new Button("4");
a.setConstraints(b4,b);
b4.addActionListener(this);
add(b4);

b.gridx=1;
b.gridy=3;
b.gridwidth=1;
b.gridheight=1;
b5=new Button("5");
a.setConstraints(b5,b);
b5.addActionListener(this);
add(b5);

b.gridx=2;
b.gridy=3;
b.gridwidth=1;
b.gridheight=1;
b6=new Button("6");
a.setConstraints(b6,b);
b6.addActionListener(this);
add(b6);

b.gridx=0;
b.gridy=2;
b.gridwidth=1;
b.gridheight=1;
b7=new Button("7");
a.setConstraints(b7,b);
b7.addActionListener(this);
add(b7);

b.gridx=1;
b.gridy=2;
b.gridwidth=1;
b.gridheight=1;
b8=new Button("8");
a.setConstraints(b8,b);
b8.addActionListener(this);
add(b8);

b.gridx=2;
b.gridy=2;
b.gridwidth=1;
b.gridheight=1;
b9=new Button("9");
a.setConstraints(b9,b);
b9.addActionListener(this);
add(b9);

b.gridx=0;
b.gridy=1;
b.gridwidth=1;
b.gridheight=1;
b_silme=new Button("silme");
a.setConstraints(b_silme,b);
b_silme.addActionListener(this);
add(b_silme);

b.gridx=2;
b.gridy=5;
b.gridwidth=1;
b.gridheight=1;
b_nokta=new Button("nokta");
a.setConstraints(b_nokta,b);
b_nokta.addActionListener(this);
add(b_nokta);

b.gridx=3;
b.gridy=4;
b.gridwidth=1;
b.gridheight=2;
b_esittir=new Button("eşittir");
a.setConstraints(b_esittir,b);
b_esittir.addActionListener(this);
add(b_esittir);

b.gridx=3;
b.gridy=2;
b.gridwidth=1;
b.gridheight=2;
b_arti=new Button("artı");
a.setConstraints(b_arti,b);
b_arti.addActionListener(this);
add(b_arti);

b.gridx=3;
b.gridy=1;
b.gridwidth=1;
b.gridheight=1;
b_eksi=new Button("eksi");
a.setConstraints(b_eksi,b);
b_eksi.addActionListener(this);
add(b_eksi);

b.gridx=2;
b.gridy=1;
b.gridwidth=1;
b.gridheight=1;
b_carpma=new Button("çarpma");
a.setConstraints(b_carpma,b);
b_carpma.addActionListener(this);
add(b_carpma);

b.gridx=1;
b.gridy=1;
b.gridwidth=1;
b.gridheight=1;
b_bolme=new Button("bölme");
a.setConstraints(b_bolme,b);
b_bolme.addActionListener(this);
add(b_bolme);


}

public void paint(Graphics p) {
}

public void actionPerformed(ActionEvent e){	// repaint();   KOYCAK MIYIZ???????????????????

String s=e.getActionCommand();

if(s.equals("silme") || flag1==true){
okuma=t.getText();
okuma="";
yazma=okuma;
t.setText(yazma);
okuma="";
yazma="";
sayi1=0.0d;
sayi_1="";
ikinci_operator_kullanıldı=false;
ilk_operator_kullanıldı=false;
nokta_kullanıldı=false;
nokta_kullanıldı2=false;
flag1=false;
sonuc=0.0d;
//if(!(operator==1 || operator==2 || operator==3 || operator==4))
sonuc_str="";
}

if(s.equals("0")){
okuma=t.getText();
yazma=okuma+"0";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("1")){
okuma=t.getText();
yazma=okuma+"1";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("2")){
okuma=t.getText();
yazma=okuma+"2";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("3")){
okuma=t.getText();
yazma=okuma+"3";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("4")){
okuma=t.getText();
yazma=okuma+"4";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("5")){
okuma=t.getText();
yazma=okuma+"5";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("6")){
okuma=t.getText();
yazma=okuma+"6";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("7")){
okuma=t.getText();
yazma=okuma+"7";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("8")){
okuma=t.getText();
yazma=okuma+"8";
t.setText(yazma);
okuma="";
yazma="";
}
if(s.equals("9")){
okuma=t.getText();
yazma=okuma+"9";
t.setText(yazma);
okuma="";
yazma="";
}
/////////////////
if(s.equals("nokta")){	
okuma=t.getText();
if(okuma.equals("")){   //&& ilk_operator_eksi_ise==false
			yazma="0.";
			t.setText(yazma);
			nokta_kullanıldı=true;
		}
	else if(okuma.substring(0,1).equals("-")&&okuma.length()==1){
	yazma="-0.";
	nokta_kullanıldı=true;
	t.setText(yazma);
	}
	 
		if(okuma.equals("")==false && nokta_kullanıldı==false && ((okuma.substring(0,1).equals("-")&&okuma.length()!=1) || okuma.substring(0,1).equals("-")==false)){	
			if(ilk_operator_kullanıldı==false){  
		yazma=okuma+".";
		t.setText(yazma);
		nokta_kullanıldı=true;
			}
			else if(ilk_operator_kullanıldı==true){
				tampon=okuma.substring(sayi_1.length()+1,okuma.length());
				if(tampon.equals("")){
					yazma=okuma+"0.";
			t.setText(yazma);
			nokta_kullanıldı2=true;
				}
				else{
				yazma=okuma+".";
		t.setText(yazma);
		nokta_kullanıldı2=true;
				}
			}
		}
		else if(okuma.equals("")==false  && nokta_kullanıldı==true && ((okuma.substring(0,1).equals("-")&&okuma.length()!=1) || okuma.substring(0,1).equals("-")==false)){
			if(ilk_operator_kullanıldı==false){
			t.setText("sayıyı virgülle ayırırken dikkatli ol, fazla nokta koydun! Hata!");
			flag1=true;
			}
			else if(ilk_operator_kullanıldı==true){
				deneme=okuma.substring(sayi_1.length()+1,okuma.length());
				if(deneme.equals("")){
					yazma=okuma+"0.";
			t.setText(yazma);
			nokta_kullanıldı2=true;
				}
					else if(deneme.substring(0,1).equals("-")&&deneme.length()==1){
						yazma=okuma+"-0.";
						nokta_kullanıldı2=true;
						t.setText(yazma);
					}
						 if(deneme.equals("")==false && nokta_kullanıldı2==false && ((deneme.substring(0,1).equals("-")&&deneme.length()!=1) || deneme.substring(0,1).equals("-")==false)){
							yazma=okuma+".";
							t.setText(yazma);
							nokta_kullanıldı2=true;
						}
							else if(deneme.equals("")==false && nokta_kullanıldı2==true && ((deneme.substring(0,1).equals("-")&&deneme.length()!=1) || deneme.substring(0,1).equals("-")==false)){
								t.setText("sayıyı virgülle ayırırken dikkatli ol, fazla nokta koydun! Hata!");
								flag1=true;
							}
						
			}
		}
}

//////////////////////

if(s.equals("eşittir")){
	okuma=t.getText();
	
	
	if(okuma.equals("") || (okuma.substring(0,1).equals("-")&&okuma.length()==1)){
		t.setText("= operatoruyle işleme başlayamazsınız ve - üstüne = ekleyemezsiniz! yeniden deneyin");
		flag1=true;
		}
			else if((okuma.substring(0,1).equals("-")&&okuma.length()!=1) || okuma.equals("")==false){
			if(ilk_operator_kullanıldı==false){
					t.setText("eşittir'i, ilk operatorü kullandıktan sonra kullanabilrisiniz. Bir daha! Hata!");
					flag1=true;
				}
else if(ilk_operator_kullanıldı==true){
			deneme=okuma.substring(sayi_1.length()+1,okuma.length());
			if(deneme.equals("") || (deneme.substring(0,1).equals("-") && deneme.length()==1)){
				t.setText("eşittir'e 2.sayıyı girmeden bastın. Bir daha! Hata!");
			flag1=true;
			}
			
			else if(okuma.substring(okuma.length()-1,okuma.length()).equals(".")){
		t.setText("sadece . işaretiyle = basamazsınız");
		flag1=true;
	}
	
				else if(deneme.equals("")==false || (deneme.substring(0,1).equals("-") && deneme.length()!=1)){ // hangi operatorse onu yapıcaz.
				sayi_2=deneme;
				sayi2=Double.valueOf(deneme);
				ikinci_operator_kullanıldı=true;
						if(operator==1){//toplama
						sonuc=sayi1+sayi2;
						sonuc_str=String.valueOf(sonuc);
						flag1=true;
						t.setText("="+sonuc_str);
						flag1=true;
						}
						if(operator==2){//çıkarma
						sonuc=sayi1-sayi2;
						sonuc_str=String.valueOf(sonuc);
						t.setText("="+sonuc_str);
						flag1=true;
						}
						if(operator==3){//çarpma
						sonuc=sayi1*sayi2;
						sonuc_str=String.valueOf(sonuc);
						t.setText("="+sonuc_str);
						flag1=true;
						}
						if(operator==4){ //bölme
								if(sayi2==0 || (sayi2==0 && sayi1==0)){
									t.setText("Lütfen bölme'de 2.sayıya sıfır değeri vermeden işlem yapınız!");
									flag1=true;
								}
									else{
										sonuc=sayi1/sayi2;
										sonuc_str=String.valueOf(sonuc);
										t.setText("="+sonuc_str);
										flag1=true;
										}
						}
				}
}

}
}
			
if(s.equals("çarpma")){
okuma=t.getText();
	if(okuma.equals("") || (okuma.substring(0,1).equals("-")&&okuma.length()==1)){
		t.setText("* operatoruyle işleme başlayamazsınız ve - üstüne * ekleyemezsiniz! yeniden deneyin");
		flag1=true;
		}
		else if((okuma.substring(0,1).equals("-")&&okuma.length()!=1) || okuma.equals("")==false){
			if(ilk_operator_kullanıldı==false){
				yazma=okuma+"*";
		t.setText(yazma);
		sayi_1=okuma;
sayi1=Double.valueOf(okuma);
ilk_operator_kullanıldı=true;
		operator=3;
				}
			else if(ilk_operator_kullanıldı==true){
				t.setText("Eşittir yerine çarpıya bastınız! Hata!");
				flag1=true;
					}
			}
}
	
if(s.equals("bölme")){
okuma=t.getText();
	if(okuma.equals("") || (okuma.substring(0,1).equals("-")&&okuma.length()==1)){
		t.setText("/ operatoruyle işleme başlayamazsınız ve - üstüne / ekleyemezsiniz! yeniden deneyin");
		flag1=true;
		}
		else if((okuma.substring(0,1).equals("-")&&okuma.length()!=1) || okuma.equals("")==false){
			if(ilk_operator_kullanıldı==false){
				yazma=okuma+"/";
		t.setText(yazma);
		sayi_1=okuma;
sayi1=Double.valueOf(okuma);
ilk_operator_kullanıldı=true;
		operator=4;
				}
			else if(ilk_operator_kullanıldı==true){
				t.setText("Eşittir yerine bölmeye bastınız! Hata!");
				flag1=true;
					}
			}
}

if(s.equals("eksi")){									// ilk sayı eksi olabilir		//   - işareti
okuma=t.getText();
if(okuma.equals("")){ //boşsa eksiyi koy
	//ilk_operator_eksi_ise=true;
	//	yazma=okuma+"-";
	yazma="-";
	t.setText(yazma);
}
if(okuma.substring(0,1).equals("-")&&okuma.length()==1){	
t.setText("Hata!!");
flag1=true; // sildirme için
}
else if((okuma.substring(0,1).equals("-") && okuma.length()!=1)|| okuma.equals("")==false){ //demekki -12 yazılmış bu operatore basılmadn once, o zmn bu "eksi"yi 1.operator olarak ata
	if(ilk_operator_kullanıldı==false){
		yazma=okuma+"-";
		t.setText(yazma);
		sayi_1=okuma;
sayi1=Double.valueOf(okuma);
ilk_operator_kullanıldı=true;
		operator=2;
		}
		else if(ilk_operator_kullanıldı==true){
	deneme=okuma.substring(sayi_1.length()+1,okuma.length());
			if(deneme.equals("")){
				yazma=okuma+"-";
				t.setText(yazma);
			}
			else{
					t.setText("Eşittir yerine eksiye bastınız! Bir daha! Hata!");
					flag1=true;
				}
		}
}
}

if(s.equals("artı")){							// + işareti
okuma=t.getText();
	if(okuma.equals("") || (okuma.substring(0,1).equals("-")&&okuma.length()==1)){
		t.setText("+ operatoruyle işleme başlayamazsınız ve - üstüne + ekleyemezsiniz! yeniden deneyin");
		flag1=true;
		}
		else if((okuma.substring(0,1).equals("-")&&okuma.length()!=1) || okuma.equals("")==false){
			if(ilk_operator_kullanıldı==false){
				yazma=okuma+"+";
		t.setText(yazma);
		sayi_1=okuma;
sayi1=Double.valueOf(okuma);
ilk_operator_kullanıldı=true;
		operator=1;
				}
			else if(ilk_operator_kullanıldı==true){
				t.setText("Eşittir yerine artıya bastınız! Hata!");
				flag1=true;
					}
			}	
}





}

}
